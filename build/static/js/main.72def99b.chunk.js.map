{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","type","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","alt","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72def99b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SidebarOption.css';\r\n\r\nfunction SidebarOption({active, text, Icon}) {\r\n    return (\r\n        <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n            <Icon />\r\n            <h2>{text}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from 'react';\r\nimport './Sidebar.css'\r\nimport SidebarOption from './SidebarOption';\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n\r\n            <SidebarOption active Icon={HomeIcon} text=\"Home\" />\r\n            <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n            <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n            <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n            <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n            <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n            <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n\r\n            <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n                Tweet\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDp15QSdxP0U2eRylVW6dncMJ0YJcH8VXw\",\r\n    authDomain: \"twitter-clone-hk22.firebaseapp.com\",\r\n    projectId: \"twitter-clone-hk22\",\r\n    storageBucket: \"twitter-clone-hk22.appspot.com\",\r\n    messagingSenderId: \"882852363425\",\r\n    appId: \"1:882852363425:web:8ba802aa805d7fef0a04e0\",\r\n    measurementId: \"G-5DE7R7KBXP\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n  \r\nexport default db;","import React,{useState} from 'react';\r\nimport './TweetBox.css';\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\n\r\nfunction TweetBox() {\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n    const sendTweet = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\").add({\r\n            displayName: \"harry\",\r\n            username: \"harry122132\",\r\n            verified: true,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            avatar:\r\n              \"https://pbs.twimg.com/profile_images/1160850791013343234/VCFehNUA_400x400.jpg\",\r\n          });\r\n      \r\n          setTweetMessage(\"\");\r\n          setTweetImage(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            \r\n            <form>\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src=\"https://pbs.twimg.com/profile_images/1160850791013343234/VCFehNUA_400x400.jpg\" />\r\n                    <input\r\n                        onChange={(e) => setTweetMessage(e.target.value)}\r\n                        value={tweetMessage}\r\n                        placeholder=\"What's happening?\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                </div>\r\n                <input\r\n                    value={tweetImage}\r\n                    onChange={(e) => setTweetImage(e.target.value)}\r\n                    className=\"tweetBox__imageInput\"\r\n                    placeholder=\"Optional: Enter image URL\"\r\n                    type=\"text\"\r\n                />\r\n\r\n                <Button onClick={sendTweet} type=\"submit\" className=\"tweetBox__tweetButton\">Tweet</Button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetBox;\r\n","import React, {forwardRef} from 'react';\r\nimport './Post.css';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\n\r\n\r\nconst Post = forwardRef(({ displayName, username, verified, text, image, avatar }, ref) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar} />\r\n            </div>\r\n\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <div className=\"post__headerText\">\r\n                        <h3>\r\n                            {displayName}{\" \"}\r\n                            <span className=\"post__headerSpecial\">\r\n                            {verified && <VerifiedUserIcon className=\"post__badge\" />} @\r\n                            {username}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={image} alt=\"\" />\r\n                <div className=\"post__footer\">\r\n                    <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                    <RepeatIcon fontSize=\"small\" />\r\n                    <FavoriteBorderIcon fontSize=\"small\" />\r\n                    <PublishIcon fontSize=\"small\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n)\r\nexport default Post;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Feed.css';\r\nimport TweetBox from \"./TweetBox\";\r\nimport Post from './Post';\r\nimport db from './firebase';\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").onSnapshot((snapshot) =>\r\n          setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n      }, []);   \r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n\r\n            <TweetBox />\r\n\r\n            <FlipMove>\r\n                {posts.map((post) => (\r\n                    <Post\r\n                        key={post.text}\r\n                        displayName={post.displayName}\r\n                        username={post.username}\r\n                        verified={post.verified}\r\n                        text={post.text}\r\n                        avatar={post.avatar}\r\n                        image={post.image}\r\n                    />\r\n                ))}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport './Widgets.css';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__input\">\r\n                <SearchIcon className=\"widgets__searchIcon\" />\r\n                <input placeholder=\"Search Twitter\" type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"widgets__widgetContainer\">\r\n                <h2>What's happening</h2>\r\n\r\n                <TwitterTweetEmbed tweetId={\"1385260534325411842\"} />\r\n\r\n                <TwitterTimelineEmbed\r\n                sourceType=\"profile\"\r\n                screenName=\"harry122132\"\r\n                options={{ height: 400 }}\r\n                />\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets;\r\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport './App.css';\nimport Feed from './Feed';\nimport Widgets from './Widgets';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar/>\n      <Feed/>\n      <Widgets/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}